/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PersonProfile;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Address;
import model.Person;
import model.PersonProfile;

/**
 *
 * @author siddh
 */
public class ManagePersonJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    PersonProfile personProfile;

    /**
     * Creates new form ManagePersonJPanel
     */
    public ManagePersonJPanel(JPanel container, PersonProfile directory) {
        initComponents();
        
        userProcessContainer = container;
        personProfile = directory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnViewDetails = new javax.swing.JButton();
        btnDeleteAccount = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonData = new javax.swing.JTable();
        btnSearchPerson = new javax.swing.JButton();
        txtSearchPerson = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 102));

        btnBack.setBackground(new java.awt.Color(204, 204, 204));
        btnBack.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnBack.setText("<<< Back");
        btnBack.setOpaque(true);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("List of People ");

        btnViewDetails.setBackground(new java.awt.Color(204, 204, 204));
        btnViewDetails.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnViewDetails.setText("View Details");
        btnViewDetails.setOpaque(true);
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnDeleteAccount.setBackground(new java.awt.Color(204, 204, 204));
        btnDeleteAccount.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDeleteAccount.setText("Delete Account");
        btnDeleteAccount.setOpaque(true);
        btnDeleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAccountActionPerformed(evt);
            }
        });

        tblPersonData.setBackground(new java.awt.Color(153, 153, 153));
        tblPersonData.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblPersonData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Social Security Number", "Age", "Work Address", "Home Address"
            }
        ));
        jScrollPane1.setViewportView(tblPersonData);

        btnSearchPerson.setBackground(new java.awt.Color(204, 204, 204));
        btnSearchPerson.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSearchPerson.setText("Search ");
        btnSearchPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPersonActionPerformed(evt);
            }
        });

        txtSearchPerson.setBackground(new java.awt.Color(204, 204, 204));
        txtSearchPerson.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSearchPerson.setText("Type name or street address");
        txtSearchPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchPersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(714, 714, 714)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearchPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(txtSearchPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteAccount)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1091, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(647, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchPerson)
                    .addComponent(txtSearchPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnViewDetails)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteAccount)
                .addContainerGap(365, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);


        
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblPersonData.getSelectedRow();
        
        if(selectedRow >= 0){
            Person selectedPerson = (Person) tblPersonData.getValueAt(selectedRow, 0);
            
            ViewPersonJPanel panel = new ViewPersonJPanel(userProcessContainer, personProfile, selectedPerson);
            userProcessContainer.add("ViewPersonJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        } else{
            JOptionPane.showMessageDialog(null, "Please select a profile from the list view", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void btnDeleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAccountActionPerformed
        // TODO add your handling code here:
      int selectedRow = tblPersonData.getSelectedRow();
        
        if(selectedRow >= 0){
            
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete the selected profile?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION){
                Person selectedPerson = (Person) tblPersonData.getValueAt(selectedRow, 0);
                personProfile.deletePerson(selectedPerson);
                populateTable();
            }
            
        } else{
            JOptionPane.showMessageDialog(null, "Please select a profile from the list", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteAccountActionPerformed

    private void btnSearchPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPersonActionPerformed
        // TODO add your handling code here:
        if (!txtSearchPerson.getText().isBlank()){

            String search = txtSearchPerson.getText();
            Person foundPerson = personProfile.searchPerson(search);

            if (foundPerson != null){

                ViewPersonJPanel panel = new ViewPersonJPanel(userProcessContainer, personProfile, foundPerson);
                userProcessContainer.add("ViewAccountJPanel",panel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else{
                JOptionPane.showMessageDialog(null, "Person not found. Please check the Details and try again", "Warning", JOptionPane.WARNING_MESSAGE);
            }

        } else{
            JOptionPane.showMessageDialog(null, "Please type the Person Details to view", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchPersonActionPerformed

    private void txtSearchPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchPersonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchPersonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteAccount;
    private javax.swing.JButton btnSearchPerson;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblPersonData;
    private javax.swing.JTextField txtSearchPerson;
    // End of variables declaration//GEN-END:variables

public void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) tblPersonData.getModel();
        model.setRowCount(0);
        
        for (Person p : personProfile.getPerson()) {
            
            Object[] row = new Object[6];
            row[0] = p;
            row[1] = p.getLName();
            row[2] = String.valueOf(p.getSsn());
            row[3] = String.valueOf(p.getAge());
            Address had = p.getAddress();
            String hadr ="null";
            if (had!=null){
                 hadr = had.getHStreetAdd()+ ", " + had.getHUnNo()+ ", " + had.getHCity()+ ", " + had.getHstate()+ " " + had.getHzip()+ " " + had.getHPno();
          
            }
             row[4] = hadr;
            Address wad = p.getAddress();
            String wadr ="null";
            if (had!=null){
            wadr = wad.getWStreetAdd()+ ", " + wad.getWUnNo()+ ", " + wad.getWCity()+ ", " + wad.getWstate()+ " " + wad.getWzip()+ " " + wad.getWPno();
            }
            row[5] = wadr;
            model.addRow(row);
        }
}
}

